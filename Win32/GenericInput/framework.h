#pragma once

#define WIN32_LEAN_AND_MEAN             // Exclude rarely-used stuff from Windows headers
// Windows Header Files
#include <windows.h>
#include <initguid.h>
#include <Usbiodef.h>
#include <ioapiset.h>
#include <hidsdi.h>
#include <Hidclass.h>
#include <dbt.h>
#include <bluetoothapis.h>
#include <Bthdef.h>
#include <setupapi.h>
#include <Cfgmgr32.h>
#include <vector>
#include <string>
#include <algorithm>
#include <unknwn.h>
#define CONTROLLER_BUTTON_A 0x1000
#define CONTROLLER_BUTTON_B 0x2000
#define CONTROLLER_BUTTON_X 0x4000
#define CONTROLLER_BUTTON_Y 0x8000
#define CONTROLLER_BUTTON_BACK 0x0020
#define CONTROLLER_BUTTON_GUIDE 0x00400
#define CONTROLLER_BUTTON_START 0x0010
#define CONTROLLER_BUTTON_LEFTSTICK 0x0040
#define CONTROLLER_BUTTON_RIGHTSTICK 0x0080
#define CONTROLLER_BUTTON_LEFTSHOULDER 0x0100
#define CONTROLLER_BUTTON_RIGHTSHOULDER 0x0200
#define CONTROLLER_BUTTON_DPAD_UP 0x0001
#define CONTROLLER_BUTTON_DPAD_DOWN 0x0002
#define CONTROLLER_BUTTON_DPAD_LEFT 0x0004
#define CONTROLLER_BUTTON_DPAD_RIGHT 0x0008
#define CONTROLLER_GAMEPAD_GUIDE 0x0400

DEFINE_GUID(GUID_DEVCLASS_XINPUT, 0xec87f1e3, 0xc13b, 0x4100, 0xb5, 0xf7, 0x8b, 0x84, 0xd5, 0x42, 0x60, 0xcb);
//{e0cbf06c-cd8b-4647-bb8a-263b43f0f974}
DEFINE_GUID(GUID_DEVCLASS_BLUETOOTH, 0xE0CBF06C, 0xCD8B, 0x4647, 0xBB, 0x8A, 0x26, 0x3B, 0x43, 0xF0, 0xF9, 0x74);
#include "GenericInputController.h"

typedef struct _GAMEPAD_DATA {//DO NOT MODIFY, DOING SO WILL BREAK THE CONTROLLER DATABASE!
	USHORT VID;
	USHORT PID;
	std::wstring Name;
	BYTE  bLeftTrigger;
	BYTE  bRightTrigger;
	std::wstring TriggerType; // a is analog, b is digital
	SHORT sThumbLX;
	SHORT sThumbLY;
	SHORT sThumbRX;
	SHORT sThumbRY;
	BYTE bButtonA;
	BYTE bButtonB;
	BYTE bButtonX;
	BYTE bButtonY;
	BYTE bButtonBack;
	BYTE bButtonGuide;
	BYTE bButtonStart;
	BYTE bButtonLeftStick;
	BYTE bButtonRightStick;
	BYTE bButtonLeftShoulder;
	BYTE bButtonRightShoulder;
	BYTE bButtonDpadUp;
	BYTE bButtonDpadDown;
	BYTE bButtonDpadLeft;
	BYTE bButtonDpadRight;

} GAMEPAD_DATA, * P_GAMEPAD_DATA;
const SHORT XByteToShort[] = {
-32767,

-32130,-31875,-31620,-31365,
-31110,-30855,-30600,-30345,-30090,-29835,
-29580,-29325,-29070,-28815,-28560,-28305,
-28050,-27795,-27540,-27285,-27030,-26775,
-26520,-26265,-26010,-25755,-25500,-25245,
-24990,-24735,-24480,-24225,-23970,-23715,
-23460,-23205,-22950,-22695,-22440,-22185,
-21930,-21675,-21420,-21165,-20910,-20655,
-20400,-20145,-19890,-19635,-19380,-19125,
-18870,-18615,-18360,-18105,-17850,-17595,
-17340,-17085,-16830,-16575,-16320,-16065,
-15810,-15555,-15300,-15045,-14790,-14535,
-14280,-14025,-13770,-13515,-13260,-13005,
-12750,-12495,-12240,-11985,-11730,-11475,
-11220,-10965,-10710,-10455,-10200,-9945,
-9690,-9435,-9180,-8925,-8670,-8415,
-8160,-7905,-7650,-7395,-7140,-6885,
-6630,-6375,-6120,-5865,-5610,-5355,
-5100,-4845,-4590,-4335,-4080,-3825,
-3570,-3315,-3060,-2805,-2550,-2295,
-2040,-1785,-1530,-1275,-1020,-765,
-510,-255, 0,255,510,765,1020,1275,1530,
1785,2040,2295,2550,2805,3060,
3315,3570,3825,4080,4335,4590,
4845,5100,5355,5610,5865,6120,
6375,6630,6885,7140,7395,7650,
7905,8160,8415,8670,8925,9180,
9435,9690,9945,10200,10455,10710,
10965,11220,11475,11730,11985,12240,
12495,12750,13005,13260,13515,13770,
14025,14280,14535,14790,15045,15300,
15555,15810,16065,16320,16575,16830,
17085,17340,17595,17850,18105,18360,
18615,18870,19125,19380,19635,19890,
20145,20400,20655,20910,21165,21420,
21675,21930,22185,22440,22695,22950,
23205,23460,23715,23970,24225,24480,
24735,24990,25245,25500,25755,26010,
26265,26520,26775,27030,27285,27540,
27795,28050,28305,28560,28815,29070,
29325,29580,29835,30090,30345,30600,
30855,31110,31365,31620,31875,32130,
32386,

32767
};
const SHORT YByteToShort[] = {
32767,

32130,31875,31620,31365,
31110,30855,30600,30345,30090,29835,
29580,29325,29070,28815,28560,28305,
28050,27795,27540,27285,27030,26775,
26520,26265,26010,25755,25500,25245,
24990,24735,24480,24225,23970,23715,
23460,23205,22950,22695,22440,22185,
21930,21675,21420,21165,20910,20655,
20400,20145,19890,19635,19380,19125,
18870,18615,18360,18105,17850,17595,
17340,17085,16830,16575,16320,16065,
15810,15555,15300,15045,14790,14535,
14280,14025,13770,13515,13260,13005,
12750,12495,12240,11985,11730,11475,
11220,10965,10710,10455,10200,9945,
9690,9435,9180,8925,8670,8415,
8160,7905,7650,7395,7140,6885,
6630,6375,6120,5865,5610,5355,
5100,4845,4590,4335,4080,3825,
3570,3315,3060,2805,2550,2295,
2040,1785,1530,1275,1020,765,
510,255, 0,-255,-510,-765,-1020,-1275,-1530,
-1785,-2040,-2295,-2550,-2805,-3060,
-3315,-3570,-3825,-4080,-4335,-4590,
-4845,-5100,-5355,-5610,-5865,-6120,
-6375,-6630,-6885,-7140,-7395,-7650,
-7905,-8160,-8415,-8670,-8925,-9180,
-9435,-9690,-9945,-10200,-10455,-10710,
-10965,-11220,-11475,-11730,-11985,-12240,
-12495,-12750,-13005,-13260,-13515,-13770,
-14025,-14280,-14535,-14790,-15045,-15300,
-15555,-15810,-16065,-16320,-16575,-16830,
-17085,-17340,-17595,-17850,-18105,-18360,
-18615,-18870,-19125,-19380,-19635,-19890,
-20145,-20400,-20655,-20910,-21165,-21420,
-21675,-21930,-22185,-22440,-22695,-22950,
-23205,-23460,-23715,-23970,-24225,-24480,
-24735,-24990,-25245,-25500,-25755,-26010,
-26265,-26520,-26775,-27030,-27285,-27540,
-27795,-28050,-28305,-28560,-28815,-29070,
-29325,-29580,-29835,-30090,-30345,-30600,
-30855,-31110,-31365,-31620,-31875,-32130,
-32386,
-32767
};
const SHORT XByteToShortAlt[] = {
-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,-32767,
-32130, -31806, -31482, -31158, -30834, -30510, -30186, -29862, -29538, -29214, -28890, -28566, -28242, -27918, -27594, -27270, -26946, -26622, -26298, -25974, -25650, -25326, -25002, -24678, -24354, -24030, -23706, -23382, -23058, -22734, -22410, -22086, -21762, -21438, -21114, -20790, -20466, -20142, -19818, -19494, -19170, -18846, -18522, -18198, -17874, -17550, -17226, -16902, -16578, -16254, -15930, -15606, -15282, -14958, -14634, -14310, -13986, -13662, -13338, -13014, -12690, -12366, -12042, -11718, -11394, -11070, -10746, -10422, -10098, -9774, -9450, -9126, -8802, -8478, -8154, -7830, -7506, -7182, -6858, -6534, -6210, -5886, -5562, -5238, -4914, -4590, -4266, -3942, -3618, -3294, -2970, -2646, -2322, -1998, -1674, -1350, -1026, -702, -378, -54, 270, 594, 918, 1242, 1566, 1890, 2214, 2538, 2862, 3186, 3510, 3834, 4158, 4482, 4806, 5130, 5454, 5778, 6102, 6426, 6750, 7074, 7398, 7722, 8046, 8370, 8694, 9018, 9342, 9666, 9990, 10314, 10638, 10962, 11286, 11610, 11934, 12258, 12582, 12906, 13230, 13554, 13878, 14202, 14526, 14850, 15174, 15498, 15822, 16146, 16470, 16794, 17118, 17442, 17766, 18090, 18414, 18738, 19062, 19386, 19710, 20034, 20358, 20682, 21006, 21330, 21654, 21978, 22302, 22626, 22950, 23274, 23598, 23922, 24246, 24570, 24894, 25218, 25542, 25866, 26190, 26514, 26838, 27162, 27486, 27810, 28134, 28458, 28782, 29106, 29430, 29754, 30078, 30402, 30726, 31050, 31374, 32767, 32767, 32767, 32767,
32767,32767, 32767, 32767, 32767,
32767,32767, 32767, 32767, 32767,
32767,32767, 32767, 32767, 32767,
32767,32767, 32767, 32767, 32767,
32767,32767, 32767, 32767, 32767,
32767,
};
const SHORT YByteToShortAlt[] = {
32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,32767,
32475, 32150, 31825, 31500, 31175, 30850, 30525, 30200, 29875, 29550, 29225, 28900, 28575, 28250, 27925, 27600, 27275, 26950, 26625, 26300, 25975, 25650, 25325, 25000, 24675, 24350, 24025, 23700, 23375, 23050, 22725, 22400, 22075, 21750, 21425, 21100, 20775, 20450, 20125, 19800, 19475, 19150, 18825, 18500, 18175, 17850, 17525, 17200, 16875, 16550, 16225, 15900, 15575, 15250, 14925, 14600, 14275, 13950, 13625, 13300, 12975, 12650, 12325, 12000, 11675, 11350, 11025, 10700, 10375, 10050, 9725, 9400, 9075, 8750, 8425, 8100, 7775, 7450, 7125, 6800, 6475, 6150, 5825, 5500, 5175, 4850, 4525, 4200, 3875, 3550, 3225, 2900, 2575, 2250, 1925, 1600, 1275, 950, 625, 300, -25, -350, -675, -1000, -1325, -1650, -1975, -2300, -2625, -2950, -3275, -3600, -3925, -4250, -4575, -4900, -5225, -5550, -5875, -6200, -6525, -6850, -7175, -7500, -7825, -8150, -8475, -8800, -9125, -9450, -9775, -10100, -10425, -10750, -11075, -11400, -11725, -12050, -12375, -12700, -13025, -13350, -13675, -14000, -14325, -14650, -14975, -15300, -15625, -15950, -16275, -16600, -16925, -17250, -17575, -17900, -18225, -18550, -18875, -19200, -19525, -19850, -20175, -20500, -20825, -21150, -21475, -21800, -22125, -22450, -22775, -23100, -23425, -23750, -24075, -24400, -24725, -25050, -25375, -25700, -26025, -26350, -26675, -27000, -27325, -27650, -27975, -28300, -28625, -28950, -29275, -29600, -29925, -30250, -30575, -30900, -31225, -32767, -32767, -32767, -32767,
	-32767,-32767, -32767, -32767, -32767,
	-32767, -32767,-32767, -32767, -32767, -32767,
	-32767,	-32767,-32767, -32767, -32767, -32767,
	-32767,-32767,-32767, -32767, -32767, -32767,
	 -32767, -32767, -32767,
};